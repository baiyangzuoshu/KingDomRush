{"version":3,"sources":["assets\\Scripts\\Tools\\FrameAnimate.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class FrameAnimate extends cc.Component {\n    @property( cc.SpriteFrame)\n    sprite_frames : cc.SpriteFrame[] = []; // 精灵帧数组;\n    @property(cc.Integer)\n    duration=0.1 // 帧的时间间隔\n    @property(cc.Boolean)\n    loop=false // 是否循环播放\n    @property(cc.Boolean)\n    play_onload=false // 是否在组件加载的时候播放;\n\n    private sprite: cc.Sprite = null; // 精灵组件;\n    private is_playing: boolean = false; // 是否正在播放;\n    private play_time: number = 0; // 播放的时间;\n    private is_loop: boolean = false; // 是否循环播放;\n    private end_func: Function = null; // 播放结束的回调函数;\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        // 判断一下在组件所挂在的节点上面有没有cc.Sprite组件；\n        var s_com = this.node.getComponent(cc.Sprite);\n        if (!s_com) { // 没有cc.Sprite组件，要显示图片一定要有cc.Sprite组件,所以我们添加一个cc.Sprite组件;\n            s_com = this.node.addComponent(cc.Sprite);\n        }\n        this.sprite = s_com; // 精灵组件\n        // end \n        this.is_playing = false; // 是否正在播放;\n        this.play_time = 0;\n        this.is_loop = false;\n        this.end_func = null;\n        \n        // 显示第0个frame;\n        if (this.sprite_frames.length > 0) {\n            this.sprite.spriteFrame = this.sprite_frames[0];    \n        }\n        \n        if (this.play_onload) {\n            if (!this.loop) {\n                this.play_once(null);    \n            }\n            else {\n                this.play_loop();\n            }\n        }\n    }\n    \n    // 实现播放一次,\n    play_once(end_func) {\n        this.play_time = 0;\n        this.is_playing = true;\n        this.is_loop = false;\n        this.end_func = end_func;\n    }\n    // end \n    \n    // 实现循环播放\n    play_loop() {\n        this.play_time = 0;\n        this.is_playing = true;\n        this.is_loop = true;\n    }\n    // end \n    \n    stop_anim() {\n        this.play_time = 0;\n        this.is_playing = false;\n        this.is_loop = false;\n    } \n    \n    start() {\n        \n    }\n    \n    // called every frame, uncomment this function to activate update callback\n    // 每一次刷新的时候需要调用的函数，dt距离上一次刷新过去的时间;\n    update (dt) {\n        if (this.is_playing === false) { // 没有启动播放，不做处理\n            return;\n        }\n        \n        \n        \n        this.play_time += dt; // 累积我们播放的时间;\n        \n       // 计算时间，应当播放第几帧，而不是随便的下一帧，\n       // 否则的话，同样的动画1, 60帧，你在30FPS的机器上你会播放2秒，\n       // 你在60FPS的机器上你会播放1秒，动画就不同步;\n       \n        var index = Math.floor(this.play_time / this.duration); // 向下取整数\n        // index\n        if (this.is_loop === false) { // 播放一次\n            if (index >= this.sprite_frames.length) { // 非循环播放结束\n                // 精灵显示的是最后一帧;\n                this.sprite.spriteFrame = this.sprite_frames[this.sprite_frames.length - 1];\n                // end \n                this.is_playing = false;\n                this.play_time = 0;\n                if (this.end_func) { // 调用回掉函数\n                    this.end_func();\n                }\n                return;\n            }\n            else {\n                this.sprite.spriteFrame = this.sprite_frames[index];\n            }\n        }\n        else { // 循环播放;\n            \n            while (index >= this.sprite_frames.length) {\n                index -= this.sprite_frames.length;\n                this.play_time -= (this.duration * this.sprite_frames.length);\n            }\n            \n            //  在合法的范围之内\n            this.sprite.spriteFrame = this.sprite_frames[index];\n            // end \n        }\n    }\n}\n"]}