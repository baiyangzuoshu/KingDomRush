{"version":3,"sources":["assets\\Scripts\\ECS\\ECSFactory.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport { ResManagerPro } from \"../../FrameWork/manager/ResManagerPro\";\nimport TowerEntity from \"./Entities/TowerEntity\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class ECSFactory extends cc.Component {\n    private static _instance:ECSFactory=null\n    onLoad () {\n        if(null===ECSFactory._instance){\n            ECSFactory._instance=this\n        }\n        else{\n            this.destroy()\n            return\n        }\n\n        let canvas=cc.find(\"Canvas\");\n        this.towerNode=canvas.getChildByName(\"towerNode\");\n    }\n\n    public static getInstance():ECSFactory{\n        return ECSFactory._instance\n    }\n\n    private static entityID:number=0;\n    private towerNode:cc.Node=null;\n\n    async createTowerEntity(tower_type:number,world_pos:cc.Vec2):Promise<TowerEntity>{\n        console.log(\"createTowerEntity\",tower_type,world_pos);\n\n        let entity:TowerEntity=new TowerEntity();\n        \n        let prefab=null\n        if(1==tower_type){\n            prefab=await ResManagerPro.Instance.IE_GetAsset(\"prefabs\",\"Game/arrow_tower\",cc.Prefab) as cc.Prefab;\n        }\n        else if(2==tower_type){\n            prefab=await ResManagerPro.Instance.IE_GetAsset(\"prefabs\",\"Game/warlock_tower\",cc.Prefab) as cc.Prefab;\n        }\n        else if(3==tower_type){\n            prefab=await ResManagerPro.Instance.IE_GetAsset(\"prefabs\",\"Game/cannon_tower\",cc.Prefab) as cc.Prefab;\n        }\n        else if(4==tower_type){\n            prefab=await ResManagerPro.Instance.IE_GetAsset(\"prefabs\",\"Game/infantry_tower\",cc.Prefab) as cc.Prefab;\n        }\n        \n        let builded_tower = cc.instantiate(prefab) as cc.Node;\n        this.towerNode.addChild(builded_tower);\n        \n        var center_pos = this.towerNode.convertToNodeSpaceAR(world_pos);\n        console.log(center_pos);\n        builded_tower.setPosition(center_pos);\n        builded_tower.active = true;\n\n        entity.baseComponent.entityID=ECSFactory.entityID++;\n        entity.baseComponent.gameObject=builded_tower;\n\n        entity.transformComponent.x=center_pos.x;\n        entity.transformComponent.y=center_pos.y;\n\n        return entity;\n    }\n}\n"]}