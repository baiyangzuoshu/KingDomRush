{"version":3,"sources":["assets\\Scripts\\ECS\\Systems\\NavSystem.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport BaseComponent from \"../Components/BaseComponent\";\nimport NavComponent from \"../Components/NavComponent\";\nimport TransformComponent from \"../Components/TransformComponent\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class NavSystem extends cc.Component {\n    private static _instance:NavSystem=null\n    onLoad () {\n        if(null===NavSystem._instance){\n            NavSystem._instance=this\n        }\n        else{\n            this.destroy()\n            return\n        }\n    }\n\n    public static getInstance():NavSystem{\n        return NavSystem._instance\n    }\n\n    onEnemyUpdate(dt:number,navComponent:NavComponent,baseComponent:BaseComponent,transformComponent:TransformComponent){\n        if(navComponent.curTime>0){\n            navComponent.curTime-=dt;\n            baseComponent.gameObject.x=navComponent.vx*dt+transformComponent.x;\n            baseComponent.gameObject.y=navComponent.vy*dt+transformComponent.y;\n            transformComponent.x=baseComponent.gameObject.x;\n            transformComponent.y=baseComponent.gameObject.y;\n            return;\n        }\n        if(navComponent.curIndex>=navComponent.path.length-1){\n            return;\n        }\n        let curPos:cc.Vec2=navComponent.path[navComponent.curIndex];\n        let nextPos:cc.Vec2=navComponent.path[navComponent.curIndex+1];\n        let dx=nextPos.x-curPos.x;\n        let dy=nextPos.y-curPos.y;\n        let dis=Math.sqrt(dx*dx+dy*dy);\n        navComponent.vx=dx/dis*navComponent.speed;\n        navComponent.vy=dy/dis*navComponent.speed;\n        navComponent.curTime=dis/navComponent.speed;\n        navComponent.curIndex++;\n    }\n\n    onActorUpdate(dt:number,navComponent:NavComponent,baseComponent:BaseComponent,transformComponent:TransformComponent){\n        if(navComponent.curTime>0){\n            navComponent.curTime-=dt;\n            baseComponent.gameObject.x=navComponent.vx*dt+transformComponent.x;\n            baseComponent.gameObject.y=navComponent.vy*dt+transformComponent.y;\n            transformComponent.x=baseComponent.gameObject.x;\n            transformComponent.y=baseComponent.gameObject.y;\n\n            if (navComponent.vx < 0) {\n                baseComponent.gameObject.getChildByName(\"anim\").scaleX = -1;\n            }\n            else {\n                baseComponent.gameObject.getChildByName(\"anim\").scaleX = 1;\n            }\n\n            return;\n        }\n        if(navComponent.curIndex>=navComponent.path.length-1){\n            return;\n        }\n        let curPos:cc.Vec2=navComponent.path[navComponent.curIndex];\n        let nextPos:cc.Vec2=navComponent.path[navComponent.curIndex+1];\n        let dx=nextPos.x-curPos.x;\n        let dy=nextPos.y-curPos.y;\n        let dis=Math.sqrt(dx*dx+dy*dy);\n        navComponent.vx=dx/dis*navComponent.speed;\n        navComponent.vy=dy/dis*navComponent.speed;\n        navComponent.curTime=dis/navComponent.speed;\n        navComponent.curIndex++;\n    }\n}\n"]}