{"version":3,"sources":["assets\\Scripts\\Game\\GenMapPath.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport GameDataManager from \"../Data/GameDataManager\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class GenMapPath extends cc.Component {\n    anim_com: cc.Animation = null;\n    graphics: cc.Graphics = null;\n    road_data_set: any[] = null;\n    is_debug: boolean = true;\n\n    onLoad () {\n        this.anim_com = this.node.getComponent(cc.Animation);\n        var clips = this.anim_com.getClips();\n        var clip = clips[0];\n        \n        this.graphics = this.node.addComponent(cc.Graphics);\n        this.graphics.fillColor = cc.color(255, 0, 0, 255);\n        var paths = clip.curveData.paths;\n        // console.log(paths);\n        \n        this.road_data_set = [];\n        \n        var k;\n        for (k in paths) {\n            var road_data = paths[k].props.position;\n            this.gen_path_data(road_data);\n        }\n\n        if (this.is_debug) {\n            this.draw_roads();\n        }\n\n        GameDataManager.getInstance().set_map_road_set(this.road_data_set);\n    }\n    \n    start() {\n        /*\n        // test()\n        var actor = cc.find(\"UI_ROOT/map_root/ememy_gorilla\").getComponent(\"actor\");\n        // actor.gen_at_road(this.road_data_set[0]);\n        \n        actor = cc.find(\"UI_ROOT/map_root/ememy_small2\").getComponent(\"actor\");\n        // actor.gen_at_road(this.road_data_set[1]);\n        \n        actor = cc.find(\"UI_ROOT/map_root/ememy_small3\").getComponent(\"actor\");\n        actor.gen_at_road(this.road_data_set[2]);\n        */\n        // end \n    }\n    \n    get_road_set() {\n        return this.road_data_set;\n    }\n    \n    gen_path_data(road_data) {\n        var ctrl1 = null;\n        var start_point = null;\n        var end_point:cc.Vec2 = null;\n        var ctrl2 = null;\n        \n        var road_curve_path = []; // [start_point, ctrl1, ctrl2, end_point],\n        for(var i = 0; i < road_data.length; i ++) {\n            var key_frame = road_data[i];\n            if (ctrl1 !== null) {\n                road_curve_path.push([start_point, ctrl1, ctrl1, cc.v2(key_frame.value[0], key_frame.value[1])]);\n            }\n            \n            start_point = cc.v2(key_frame.value[0], key_frame.value[1]);\n            \n            for(var j = 0; j < key_frame.motionPath.length; j ++) {\n                var end_point = cc.v2(key_frame.motionPath[j][0], key_frame.motionPath[j][1]);\n                ctrl2 = cc.v2(key_frame.motionPath[j][2], key_frame.motionPath[j][3]);\n                if (ctrl1 === null) {\n                    ctrl1 = ctrl2;\n                }\n                // 贝塞尔曲线 start_point, ctrl1, ctrl2, end_point,\n                road_curve_path.push([start_point, ctrl1, ctrl2, end_point]);\n                ctrl1 = cc.v2(key_frame.motionPath[j][4], key_frame.motionPath[j][5]);\n                start_point = end_point;\n            }\n        }\n        \n        //console.log(road_curve_path);\n        \n        var one_road = [road_curve_path[0][0]];\n        \n        for(var index = 0; index < road_curve_path.length; index ++) {\n            start_point = road_curve_path[index][0];\n            ctrl1 = road_curve_path[index][1];\n            ctrl2 = road_curve_path[index][2];\n            end_point = road_curve_path[index][3];\n            \n            var len = this.bezier_length(start_point, ctrl1, ctrl2, end_point);\n            var OFFSET = 16;\n            var count = len / OFFSET;\n            count = Math.floor(count);\n            var t_delta = 1 / count;\n            var t = t_delta;\n            \n            for(var i = 0; i < count; i ++) {\n                var x = start_point.x * (1 - t) * (1 - t) * (1 - t) + 3 * ctrl1.x * t * (1 - t) * (1 - t) + 3 * ctrl2.x * t * t * (1 - t) + end_point.x * t * t * t;\n                var y = start_point.y * (1 - t) * (1 - t) * (1 - t) + 3 * ctrl1.y * t * (1 - t) * (1 - t) + 3 * ctrl2.y * t * t * (1 - t) + end_point.y * t * t * t;\n                one_road.push(cc.v2(x, y));\n                t += t_delta;\n            }\n        }\n        \n        //console.log(one_road);\n        this.road_data_set.push(one_road);\n    } \n\n    draw_roads() {\n        this.graphics.clear();\n\n        for(var j = 0; j < this.road_data_set.length; j ++) {\n            var path = this.road_data_set[j];\n\n            for(var i = 0; i < path.length; i ++) {\n                this.graphics.moveTo(path[i].x - 1, path[i].y + 1);\n                this.graphics.lineTo(path[i].x - 1, path[i].y - 1);\n                this.graphics.lineTo(path[i].x + 1, path[i].y - 1);\n                this.graphics.lineTo(path[i].x + 1, path[i].y + 1);\n                this.graphics.close(); // 组成一个封闭的路径\n            }\n        }\n        \n        // 画先，填充;\n        // this.graphics.stroke();\n        this.graphics.fill();\n    } \n\n    bezier_length(start_point, ctrl1, ctrl2, end_point) {\n        // t [0, 1] t 分成20等分 1 / 20 = 0.05\n        var prev_point = start_point;\n        var length = 0;\n        var t = 0.05;\n        for(var i = 0; i < 20; i ++) {\n            var x = start_point.x * (1 - t) * (1 - t) * (1 - t) + 3 * ctrl1.x * t * (1 - t) * (1 - t) + 3 * ctrl2.x * t * t * (1 - t) + end_point.x * t * t * t;\n            var y = start_point.y * (1 - t) * (1 - t) * (1 - t) + 3 * ctrl1.y * t * (1 - t) * (1 - t) + 3 * ctrl2.y * t * t * (1 - t) + end_point.y * t * t * t;\n            var now_point = cc.v2(x, y);\n            // var dir = cc.pSub(now_point, prev_point);\n            var dir = now_point.sub(prev_point);\n            prev_point = now_point;\n            length += dir.mag();\n            \n            t += 0.05;\n        }\n        return length;\n    }\n}\n"]}